name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: loqalabs/loqa-hub

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      nats:
        image: nats:2.10-alpine
        ports:
          - 4222:4222
          - 8222:8222
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8222/healthz || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout loqa-hub
      uses: actions/checkout@v4
      with:
        path: loqa-hub

    - name: Checkout loqa-proto
      uses: actions/checkout@v4
      with:
        repository: loqalabs/loqa-proto
        path: loqa-proto

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache-dependency-path: 'loqa-hub/go.sum'

    - name: Verify Go version
      run: go version

    - name: Download dependencies
      run: go mod download
      working-directory: loqa-hub

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
      working-directory: loqa-hub
      env:
        NATS_URL: nats://localhost:4222

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./loqa-hub/coverage.out
        flags: hub
        name: loqa-hub

    - name: Run go vet
      run: go vet ./...
      working-directory: loqa-hub

    - name: Run staticcheck
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./...
      working-directory: loqa-hub

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout loqa-hub
      uses: actions/checkout@v4
      with:
        path: loqa-hub

    - name: Checkout loqa-proto
      uses: actions/checkout@v4
      with:
        repository: loqalabs/loqa-proto
        path: loqa-proto

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache-dependency-path: 'loqa-hub/go.sum'

    - name: Verify Go version
      run: go version

    - name: Build binary (without whisper for CI)
      run: |
        go build -v -ldflags="-w -s" -o bin/loqa-hub ./cmd
      working-directory: loqa-hub

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: loqa-hub-binary
        path: loqa-hub/bin/loqa-hub

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout loqa-hub
      uses: actions/checkout@v4
      with:
        path: loqa-hub

    - name: Checkout loqa-proto
      uses: actions/checkout@v4
      with:
        repository: loqalabs/loqa-proto
        path: loqa-proto

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./loqa-hub/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout loqa-hub
      uses: actions/checkout@v4
      with:
        path: loqa-hub

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './loqa-hub'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'